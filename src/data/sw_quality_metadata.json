 {
     "openapi": "3.0.0",
     "info": {
     "title": "Quality Metadata",
     "description": "API Documentation Regarding Quality Metadata.\n\nThis API will provide the information to send Quality metadata to our BrewQuest portal.\n\nIt will present the quality KPIs at the table and field level!\n\nSome useful links:\n[BrewQuest Data Management](https://brewdatportal.ab-inbev.com/datamesh-ui/DataAsset)",
      "version": "1.0.0"
     },
     "servers": [
      {
        "url": "https://abi-apim-brewdat-quali-metadata.azure-ai.net"
      }
     ],
     "paths": {
      "/api-docs-qual": {
        "post": {
          "summary": "Insert in BrewQuest",
          "tags": ["Quality Metadata"],
          "requestBody": {
            "description": "Quality Metadata",
            "required": true,
            "content": 
            {
              "application/json": 
              {
                "example": 
                 {
                 "headerBusinessMetadataStrucutre":{
                    "dlz": "BEES",
                    "zone": "AFR",
                    "businessDomain": "Customer",
                    "businessSubDomain": "-",
                    "subRegion": "-",
                    "dataProduct": "Sap",
                    "tableName": "gh_customer",
                    "dataCatalogName": "brewdat_uc_bees_qa",
                    "schemaName": "brz_bees_sales_files"
                 },
                  "qualityMetadataStructure": { 
                    "qualityTableName": "gh_customer",
                     "qualityAttributes":{
                       "colunmName":"customer_nm",
                       "kpiName": "Accuracy",
                       "dqResult": "100%"
                       }                                                                     
                    }  
                  }                     
                }
              }
            }
          },
              "responses": 
                  {
                    "200": {
                      "description": "Successful response - Header",
                      "content": {
                        "application/json": {
                          "schema": {
                            "$ref": "#/components/schemas/HeaderQualityMetadata"
                          },
                          "example": {
                            "message": "Request processed successfully!"
                          }
                        }
                      }
                    },
                    "201": {
                      "description": "Successful response - Body",
                      "content": {
                        "application/json": {
                          "schema": {
                            "$ref": "#/components/schemas/QualityMetadata"
                          },
                          "example": {
                            "message": "Request processed successfully!"
                          }
                        }
                      }
                    },
                    "500": {
                      "description": "Internal server error",
                      "content": {
                        "application/json": {
                          "example": {
                            "error": "An internal error has occurred."
                          }
                        }
                      }
                    },
                    "400": {
                      "description": "Invalid value",
                      "content": {
                        "application/json": {
                          "schema": {
                            "$ref": "#/components/schemas/Validation"
                          },
                          "example": {
                            "message": "Invalid value."
                          }
                        }
                      }
                    }
                  }         
         }
       } ,
      "components": {
        "schemas": {
          "HeaderQualityMetadata": {
            "type": "object",
            "properties": {
              "dlz"       : {"type": "string", "description": "DLZ Abbreviation", "enum": ["AFR","ANLT","APC","AUR", "BEES","BRWR", "EUR", "GHQ", "GHQML",  "IL",  "LOLA", " MRTC",  "MAZ", "MAZML",  " MGMT", "MLPLT", "NAZ", "PPLE", "PLTL", " PRTL", "SPLYC", "NCSA"]},
              "zone"      : {"type": "string", "description": "Abbreviation for Zones","enum": ["AFR", "APC", "EUR", "GHQ", "MAZ", "NAZ", "SAZ"]},
              "businessDomain"    : {"type": "string", "description": "The business domains that are part of the Entity and the Attribute","enum":["Audit", "Common", "Customer", "Finance", "Geo", "Legal", "Logistics", "Marketing", "Order", "People", "Procurement", "Product", "Promotion", "Sales", "Supply", "Technology"]},
              "businessSubDomain": {"type": "string", "description": "The business sub-domains that are part of the DB"},
              "subRegion"          : {"type" : "string", "description": "Subregion that a country may have."},
              "dataProduct"       : {"type": "string", "description": "Origin data source name"},
              "tableName" : {"type": "string", "description": "Table Name"},
              "dataCatalogName" : {"type": "string", "description": "Catalog Name"},
              "schemaName": {"type": "string", "description":"Schema Name"}
            },
            "required": ["ObjectType", "tableName", "dlz", "zone", "business_domain", "business_Sub-Domain", "subregion", "data_Product"]
          },
          "QualityMetadata": {
            "type": "object",
            "properties": {
              "QualityTable": {"type":"string","description":"Table that will present the Quality results"},
              "object_type": {"$ref": "#/components/schemas/QualityAttributes"}
              }
            }, 
            "QualityAttributes":{
              "type": "object",
              "properties": {
                "colunmName" : {"type": "string", "description": "Column name"},
                "kpiName"    : {"type": "string","description": "dimension name","enum":["Accuracy", "Integrity", "Validity", "Completeness", "Consistency", "Uniqueness", "Timeliness", "FitnessIndex"]},
                "dqResult"   : { "type": "float","description": "Value between 0 and 100%"}
            }     
          },
          "Validation": {
            "type": "object",
            "properties": {
              "code"    : {"type": "integer","format": "int32"},
              "type"    : {"type": "string"},
              "message" : {"type": "string"}
           }
          }
        }  
      }  
    }  
                          
                      
                        