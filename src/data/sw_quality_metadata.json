 {
     "openapi": "3.0.0",
     "info": {
     "title": "Quality Metadata",
     "description": "API Documentation Regarding Quality Metadata.\n\nThis API will provide the information to send Quality metadata to our BrewQuest portal.\n\nIt will present the quality KPIs at the table and field level!\n\nSome useful links:\n[BrewQuest Data Management](https://brewdatportal.ab-inbev.com/datamesh-ui/DataAsset)",
      "version": "1.0.0"
     },
     "servers": [
      {
        "url": "https://abi-apim-brewdat-quali-metadata.azure-ai.net"
      }
     ],
     "paths": 
     {
      "/api-docs-qual": 
      {
       "post": 
       {
                  "summary": "Insert fitness Index in BrewQuest",
                  "tags": ["Quality Metadata Fitness-Index"],
                  "requestBody": 
                  {
                    "description": "Quality Metadata Fitness-Index",
                    "required": true,
                    "content": 
                      {
                        "application/json": 
                        {
                          "example": 
                          {
                          "headerBusinessMetadataStrucutre":
                            {
                              "dataCatalogName": "brewdat_uc_bees_qa",
                              "schemaName": "brz_bees_sales_files",
                              "tableName": "gh_invoice"
                            },
                            "qualityResult": [
                             {
                              "colunms": ["net_revenue_amt", "gross_revenue_amt", "discounts_tot", "excise_tax"],
                              "context": {"sql_condition": "net_revenue_amt = gross_revenue_amt - discounts_tot - excise_tax"},
                              "expectationName": "net_revenue_formula",
                              "dqDimension": "Validity",
                              "expectedResult": 0.94,
                              "result": 0.99,   
                              "expectationRunTs": "2023-07-29T02:15:02.538+0000"
                            }     
                          ]                                                                 
                         }                       
                        }
                      }
                  }
         },
           "responses": 
           {
            "200": {
              "description": "Successful response - Header",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HeaderQualityMetadata"
                  },
                  "example": {
                    "message": "Request processed successfully!"
                  }
                }
              }
            },
            "201": {
              "description": "Successful response - Body",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/QualityResult"
                  },
                  "example": {
                    "message": "Request processed successfully!"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "example": {
                    "error": "An internal error has occurred."
                  }
                }
              }
            },
            "400": {
              "description": "Invalid value",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Validation"
                  },
                  "example": {
                    "message": "Invalid value."
                  }
                }
              }
            }
          }         
    }            
   } , 
      "components": {
        "schemas": {
          "HeaderQualityMetadata": {
            "type": "object",
            "properties": {
              "dataCatalogName" : {"type": "string", "description": "Catalog Name"},
              "schemaName": {"type": "string", "description":"Schema Name"},
              "tableName" : {"type": "string", "description": "Table Name"}
            },
            "required": [ "tableName" ]
          }, 
            "QualityResults":{
              "type": "object",
              "properties": {
                "attributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                      "properties": {
                        "colunmName"     : {"type": "array","items": {"type": "object", "properties": {"colunmName": {"type": "string", "description": "Column name"}}}},
                        "Context"        : {"type": "array","items": {"type": "object", "properties": {"Key": {"type": "string", "description": "Key"},"Value": {"type": "string", "description": "Value"}}}},
                        "dqDimension"    : {"type": "string",   "description": "dimension name","enum":["Accuracy", "Integrity", "Validity", "Completeness", "Consistency", "Uniqueness", "Timeliness", "FitnessIndex"]},
                        "expectedResult" : {"type": "float",    "description": "Value between 0 and 1, referring to the analysis generated according to the rule <1 or >=1"},
                        "expectation"    : {"type": "string",   "description": "it can be filled in by quality dimensions or customized by the customer."},
                        "result"         : {"type": "float",    "description": "Value between 0 and 1"},
                        "suiteRunId"     : {"type": "string",   "description": "Case identifier (in this case, one column or several columns can be entered, applying one or more quality dimensions)"},
                        "suiteRunTs"     : {"type": "string",   "description": "Time of the run"}
                    },
                    "required": ["colunmName"]     
                  }
                 }
               }
              }  ,
              "Validation": {
                "type": "object",
                "properties": {
                  "code"    : {"type": "integer","format": "int32"},
                  "type"    : {"type": "string"},
                  "message" : {"type": "string"}
                  }
                 }
        }  
      }
    } 
   

                          
                      
                        